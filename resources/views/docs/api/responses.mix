<h1>Responses</h1>
<p>All controllers should return a response to be sent back to the client. A response can be sent in many of the built in ways that horsepower supports.</p>
<h2>Strings</h2>
<p>Strings can be sent as a response and will automatically be converted to a full HTTP response with a header of <code>text/html</code>.</p>
<pre><code class="language-javascript">Router.get('/', () => 'Hello World')</code></pre>

<h2>Auto JSON</h2>
<p>When something that is returned which is not a <code>Response</code> object or <code>string</code>, it will be converted to a full json HTTP response with a header of <code>application/json</code>.</p>
<pre><code class="language-javascript">Router.get('/arr', () => ['a', 'b', 'c'])
Router.get('/obj', () => ({ a: 'a', b: 'b', c: 'c' }))
Router.get('/bool', () => true)
Router.get('/num', () => 123)</code></pre>

<h2>Response Object</h2>
<p>The response object has multiple methods for returning different types of responses each with their own unique feature.</p>

<h3>html</h3>
<p>html is the most basic response, it is the same as returning a string in the controller.</p>
<pre><code class="language-javascript">Router.get('/', client => client.response.html('Hello World'))</code></pre>

<h3>json</h3>
<p>json is another basic return type, it can be automatically executed by something that isn't a <code>Response</code> object or a <code>string</code>. However if you need to return a <code>string</code> as json (since strings get converted to html instead of json) it can be done using this built in method.</p>
<pre><code class="language-javascript">Router.get('/', client => client.response.json('Hello World'))</code></pre>

<h3>render</h3>
<p>render will render a template, and return it with a full HTTP response with a header of <code>text/html</code>.</p>
<p>Horsepower has its own rendering engine which uses mix files. However, other rendering engines are supported. Horsepower will use the correct rendering engine based on the the file extension passed to renderer. This will allow for the usage of multiple rendering engines in the same project.</p>
<ul>
  <li><code>Horsepower</code> &ndash; must pass a <code>.mix</code> extension to the renderer</li>
  <li><code>Pug</code> &ndash; must pass a <code>.pug</code> extension to the renderer</li>
  <li><code>Mustache</code>&ndash; must pass a <code>.mustache</code> extension to the renderer</li>
  <li><code>Handlebars</code>&ndash; must pass a <code>.hbs</code> extension to the renderer</li>
</ul>
<p class="warn"><strong>Note:</strong> You must manually install the package to render with a particular extension. Rendering engines do not come pre-installed (This includes the horsepower rendering engine).</p>
<pre><code class="language-javascript">Router.get('/', client => client.response.render('main.mix'))</code></pre>

<h3>cached</h3>
<h3>download</h3>
<h3>redirect</h3>